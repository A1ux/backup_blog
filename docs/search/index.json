[{"content":"Lab: SQL injection vulnerability allowing login bypass En este laboratorio se pretende explotar un SQL Injection, esta vez es un inicio de sesion, y se intentara explotar como en el laboratorio 1 en el cual se tiene que tratar de hacer un bypass para que el sistema no valide el resto que seria la contrasena. La consulta que hara seguramente sera:\nSELECT*FROMusersWHEREusername=\u0026#39;usuario\u0026#39;ANDpassword=\u0026#39;contrasena\u0026#39;Reconocimiento Se tratara de hacer que el sistema ya no invalide la contrasena que es enviada en la peticion, todo esto comentando lo que le sigue, de esta manera:\nSELECT*FROMusersWHEREusername=\u0026#39;usuario\u0026#39;--\u0026#39; AND password = \u0026#39;contrasena\u0026#39; De esta manera solo valida al usuario y la contrasena se mantiene comentada.\nExplotacion En este caso hay que hacerse con el usuario administrator del sistema, asi que se procede a realizar la siguiente inyeccion:\nadministrator' or 1=1--\n Payload inyectado en usuario \nque quedaria asi al ejecutar la consulta:\nSELECT*FROMusersWHEREusername=\u0026#39;administrator\u0026#39;or1=1--\u0026#39; AND password = \u0026#39;contrasena\u0026#39; Finalmente hemos resuelto el lab:\n Login Bypass \nTambien hubiera sido posible utilizar una lista1para realizar un ataque con intruder pero esta vez no fue necesario ya que el bypass es basico, pero se podria intentar.\n  Lista de payloads bypass login\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-02T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/headlab2_hu805cb0d6a4b14c731386e6ad05a2b64b_66595_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/","title":"Portswigger Academy Learning Path: SQL Injection Lab 2"},{"content":"Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data Este laboratorio contiene una vulnerabilidad de SQL Injection y la manera de resolverlo es que haga un ataque de SQL y que muestra los detalles de todos los productos en cualquier categoria, tanto released como unreleased.\nNos regalan una pista y se nos dice que el sistema realiza la siguiente consulta SQL\nSELECT*FROMproductsWHEREcategory=\u0026#39;Gifts\u0026#39;ANDreleased=1Reconocimiento Como lo explica en la lectura del laboratorio, la aplicacion recupera datos de la categoria Gifts y que solo se muestre los datos que tengan released como valor 1.\nPayloads He probado los siguientes payloads para saber si podria mostrar el resto de productos que no esta mostrando anteriormente.\n   Payload Accion     Gifts'\u0026ndash; Muestra solo 1 producto mas   Gifts'\u0026ndash; - Muestra solo 1 producto master   Gifts' and released = 0\u0026ndash; Muestra solo 1 producto    Explotacion Al notar como hace la validacion nos podemos dar cuenta que podriamos bypassear esa instruccion, recordando a la forma en que se hace un bypass a un login. Creando la siguiente consulta a inyectar quedaria: SQL\nGifts' or 1=1--\nPara que al final al inyectar la consulta SQL quedaria: SQL\nSELECT*FROMproductsWHEREcategory=\u0026#39;Gifts\u0026#39;or1=1-- AND released = 1 Haciendo que despues de -- se comente lo que le sigue y solo se ejecute lo primero. Adicionalmente no existe solo ese payload, se puede hacer uso de otros como la siguiente lista1Y por el tamano de la salida nos podemos dar cuenta que arroja muchos datos, aunque un payload no sea aceptado se puede hacer uso de otros.\n Ataque con intruder \n  Lista de payloads bypass login\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-01T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection/head_hu2b355747f36c4c54e2d86cd5033edffa_87074_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection/","title":"Portswigger Academy Learning Path: SQL Injection"}]