<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>portswigger on A1ux</title>
    <link>https://www.alux.cc/tags/portswigger/</link>
    <description>Recent content in portswigger on A1ux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-GT</language>
    <lastBuildDate>Sun, 07 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.alux.cc/tags/portswigger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 10</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-10/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-10/</guid>
      <description>Lab: SQL injection attack, listing the database contents on Oracle En este laboratorio1la finalidad es poder extraer los datos en una base de datos oracle que es muy distinto a como se hace en los otros gestores
Reconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 11</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-11/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-11/</guid>
      <description>Lab: Blind SQL injection with conditional responses En este laboratorio1la finalidad es poder extraer la contrasena del usuario administrator, para eso se nos dan las columnas username y password de la tabla users.
Reconocimiento Lo primero es buscar donde es vulnerable a sql injection, en este caso nos dicen en el articulo que seguramente es la cookie de TrackingId solo queda comprobarlo.
Payloads Detectar si es vulnerable TrackingId=xxxxxxxxxxxxxxxx&#39; and &#39;1&#39;=&#39;1; //Muestra welcome back TrackingId=xxxxxxxxxxxxxxxx&#39; and &#39;1&#39;=&#39;2; //No muestra welcome back  Peticion enviada al servidor</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 8</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-8/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-8/</guid>
      <description>Lab: SQL injection attack, querying the database type and version on MySQL and Microsoft En este laboratorio1la finalidad es poder extraer la version de la base de datos MySQL o Microsoft SQL Server y poder imprimir en las tablas que se presentan. La string que deberiamos de recuperar es 8.0.27
Reconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 9</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-9/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-9/</guid>
      <description>Lab: SQL injection attack, listing the database contents on non-Oracle databases En este laboratorio1la finalidad es poder extraer datos de la base de datos, basandose en inyectar consultas para tomarlos, al final se resuelve el laboratorio iniciando sesion con el usuario administrator.
Reconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 3</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-3/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-3/</guid>
      <description>Lab: SQL injection UNION attack, determining the number of columns returned by the query En este laboratorio1la finalidad es recuperar el numero de columnas de la tabla a la que se esta realizando la consulta, para posteriormente poder extraer los datos basandose en ese numero de columnas. Para este caso se puede hacer uso de dos metodos que pueden ser ORDER BY ? o UNION SELECT NULL,NULL,NULL...
Usando algunos de estos dos podemos recuperar el numero de columnas, sabiendo que a la hora que la aplicacion genere un error no sera el numero de columna correcta, claramente si usamos un order by 9 y secuencialmente llegamos hasta el 10 quiere decir que esa tabla cuenta con 9 columnas y son las que utilizaremos posteriormente para imprimir los datos.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 4</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-4/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-4/</guid>
      <description>Lab: SQL injection UNION attack, finding a column containing text En este laboratorio1la finalidad es saber el tipo de datos que es utilizado en los valores que son enviadas en la consulta, ya que es necesario saber que tipo de valor son para que el sistema no genere errores al momento de extraeros, utilizaremos la informacion anterior primero enumerando el numero de columnas, y al hacer el reconocimiento sabemos que cuenta con 3 columnas ya que es la unica que no genera un error.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 5</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-5/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-5/</guid>
      <description>Lab: Lab: SQL injection UNION attack, retrieving data from other tables En este laboratorio1la finalidad es poder extraer los datos de una tabla, las columnas son username y password de la tabla users. La idea es hacer uso del metodo union en sql para poder extraer esos datos aparte de los que ya trae el sistema. La consulta comun para recuperar estos datos seria:
selectusername,passwordfromusers;Reconocimiento Ahora toca usar el metodo union para poder recuperar esos datos y tratar de inyectar ese comando en la consulta primaria para recuperar los usuarios y contrasenas de la tala de usuarios.</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 6</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-6/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-6/</guid>
      <description>Lab: SQL injection UNION attack, retrieving multiple values in a single column En este laboratorio1la finalidad es poder extraer los datos de una tabla, las columnas son username y password de la tabla users. Es igual al anterior lab solamente que esta vez se tiene que extraer los datos en una sola columna haciendo uso de una consulta sql. La forma que tiene SQL para poder extraer datos de esa manera es de la siguiente:</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 7</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-7/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-7/</guid>
      <description>Lab: SQL injection attack, querying the database type and version on Oracle En este laboratorio1la finalidad es poder extraer la version de Oracle especificamente algo sobre este string Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production, PL/SQL Release 11.2.0.2.0 - Production, CORE 11.2.0.2.0 Production, TNS for Linux: Version 11.2.0.2.0 - Production, NLSRTL Version 11.2.0.2.0 - Production
Reconocimiento Ya que sabemos que el gestor es Oracle, se utilizaran payloads de Oracle y la manera de extraer los datos es muy diferente, siguiendo los pasos anteriores tocara enumerar columnas</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 2</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/</guid>
      <description>Lab: SQL injection vulnerability allowing login bypass En este laboratorio se pretende explotar un SQL Injection, esta vez es un inicio de sesion, y se intentara explotar como en el laboratorio 1 en el cual se tiene que tratar de hacer un bypass para que el sistema no valide el resto que seria la contrasena. La consulta que hara seguramente sera:
SELECT*FROMusersWHEREusername=&amp;#39;usuario&amp;#39;ANDpassword=&amp;#39;contrasena&amp;#39;Reconocimiento Se tratara de hacer que el sistema ya no invalide la contrasena que es enviada en la peticion, todo esto comentando lo que le sigue, de esta manera:</description>
    </item>
    
    <item>
      <title>Portswigger Academy Learning Path: SQL Injection Lab 1</title>
      <link>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-1/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-1/</guid>
      <description>Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data Este laboratorio contiene una vulnerabilidad de SQL Injection y la manera de resolverlo es que haga un ataque de SQL y que muestra los detalles de todos los productos en cualquier categoria, tanto released como unreleased.
Nos regalan una pista y se nos dice que el sistema realiza la siguiente consulta SQL
SELECT*FROMproductsWHEREcategory=&amp;#39;Gifts&amp;#39;ANDreleased=1Reconocimiento Como lo explica en la lectura del laboratorio, la aplicacion recupera datos de la categoria Gifts y que solo se muestre los datos que tengan released como valor 1.</description>
    </item>
    
  </channel>
</rss>
